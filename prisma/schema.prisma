// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


enum Chains {
  SOLANA
  EVM
  NEAR
  SUI
}

enum Providers {
  GOOGLE
  GITHUB
  LINKEDIN
  PHONE
  SPOTIFY
  DISCORD
  TWITTER
  INSTAGRAM
  MICROSOFT
  APPLE
}

enum Kyc {
  DATABASE
  DOCUMENT
  SELFIE
  SSN
}
model User {
  id    String  @id @default(auto()) @map("_id") @db.ObjectId
  email String  @unique
  username  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  provider  Providers
  avatar String?
  default Chains @default(SOLANA)
  wallets Wallets[]
  kycid String?
  kyc Kyc?
  keys Keys[]
}

model Wallets {
  id               String          @id @default(auto()) @map("_id") @db.ObjectId
  address          String          @unique
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  chain            Chains
  owner            User            @relation(fields: [ownerId], references: [id])
  ownerId          String          @db.ObjectId
}


model Keys {
  id               String          @id @default(auto()) @map("_id") @db.ObjectId
  key              String          @unique
  chain            Chains 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  owner            User            @relation(fields: [ownerId], references: [id]) 
  ownerId          String          @db.ObjectId
}

// model ProjectMember {
//   id        String            @id @default(auto()) @map("_id") @db.ObjectId
//   createdAt DateTime          @default(now())
//   updatedAt DateTime          @updatedAt
//   project   Project           @relation(fields: [projectId], references: [id])
//   projectId String            @db.ObjectId
//   user      User              @relation(fields: [userId], references: [id])
//   userId    String            @db.ObjectId
// }

// model Project {
//   id               String          @id @default(auto()) @map("_id") @db.ObjectId
//   address          String          @unique
//   createdAt        DateTime        @default(now())
//   updatedAt        DateTime        @updatedAt
//   name             String
//   slug             String          @unique
//   logo             String?
//   owner            User            @relation(fields: [ownerId], references: [id])
//   ownerId          String          @db.ObjectId
//   callbackUrls     String[]
//   ProjectMember    ProjectMember[]
// }